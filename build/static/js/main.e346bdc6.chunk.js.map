{"version":3,"sources":["Components/Image/getlearn.svg","Components/Course/Course.js","Components/Header/Header.js","Components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","src","getlearn","alt","React","Component","Header","Fragment","to","clss","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","path","exact","component","Course","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,sC,0TCqE5BC,G,uLA9DX,OACE,yBAAKC,UAAU,OACb,6BACE,kBAAC,EAAD,OAEF,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAUF,UAAU,WAAWG,IAAI,SAC7C,wFAIF,yBAAKH,UAAU,mBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,UACb,+CAEF,yBAAKA,UAAU,SACb,uBAAGA,UAAU,eAAb,8LAMF,yBAAKA,UAAU,SAAf,kBAIF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UACb,sDAEF,yBAAKA,UAAU,SACb,uBAAGA,UAAU,eAAb,sIAKF,yBAAKA,UAAU,SAAf,kBAIF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UACb,iDAEF,yBAAKA,UAAU,SACb,uBAAGA,UAAU,eAAb,qKAMF,yBAAKA,UAAU,SAAf,wB,GAtDOI,IAAMC,YC6BVC,E,iLAzBX,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,KACE,yBAAKP,UAAU,aACb,yBAAKA,UAAU,iDACb,kBAAC,IAAD,CAAMA,UAAU,eAAeQ,GAAG,KAAI,yBAAKC,KAAK,aAAaR,IAAKC,IAAUC,IAAI,UAChF,4BAAQH,UAAU,iBAAiBU,KAAK,SAASC,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC5K,0BAAMf,UAAU,yBAElB,yBAAKA,UAAU,qCAAqCgB,GAAG,sBACrD,yBAAKhB,UAAU,eACb,kBAAC,IAAD,CAAMA,UAAU,gCAAgCQ,GAAG,KAAnD,QACA,kBAAC,IAAD,CAAMR,UAAU,oBAAoBQ,GAAG,WAAvC,aAIN,kBAAC,IAAD,CAAOS,KAAK,IAAIC,OAAK,EAACC,UAAWpB,IACjC,kBAAC,IAAD,CAAOkB,KAAK,UAAUC,OAAK,EAACC,UAAWC,W,GAnB9BhB,IAAMC,WC8DZN,E,iLA9DX,OACE,yBAAKC,UAAU,OACb,6BACE,kBAAC,EAAD,OAEF,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAUF,UAAU,WAAWG,IAAI,SAC7C,wFAIF,yBAAKH,UAAU,mBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,UACb,+CAEF,yBAAKA,UAAU,SACb,uBAAGA,UAAU,eAAb,8LAMF,yBAAKA,UAAU,SAAf,kBAIF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UACb,sDAEF,yBAAKA,UAAU,SACb,uBAAGA,UAAU,eAAb,sIAKF,yBAAKA,UAAU,SAAf,kBAIF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UACb,iDAEF,yBAAKA,UAAU,SACb,uBAAGA,UAAU,eAAb,qKAMF,yBAAKA,UAAU,SAAf,wB,GAtDOI,IAAMC,WCOVgB,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e346bdc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/getlearn.57038fff.svg\";","import React from 'react';\nimport getlearn from '../Image/getlearn.svg';\nimport './Course.css';\nimport Header from '../Header/Header.js'\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <Header />\n        </div>\n        <header className=\"App-header\">\n          <img src={getlearn} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            What is DevOps?/Why should we used it?/How does it work?\n          </p>\n        </header>\n        <div className=\"container-fluid\">\n          <div className=\"row devops\">\n            <div className=\"col-12\">\n              <h1>What is Devops</h1>\n            </div>\n            <div className=\"col-6\">\n              <p className=\"devopsStyle\">\n                DevOps is the practice of operations and development\n                engineers participating together in the entire service\n                lifecycle, from design through the development process to production support.\n              </p>\n            </div>\n            <div className=\"col-6\">\n              Image Section\n            </div>\n          </div>\n          <div className=\"row usedDevops\">\n            <div className=\"col-12\">\n              <h1>Why should we used it</h1>\n            </div>\n            <div className=\"col-6\">\n              <p className=\"devopsStyle\">\n                Reduced Deployment Failures, Rollbacks, Time to Recover,\n                Shorter Development Cycles, Faster Innovation and build better products.\n              </p>\n            </div>\n            <div className=\"col-6\">\n              Image Section\n            </div>\n          </div>\n          <div className=\"row workDevops\">\n            <div className=\"col-12\">\n              <h1>How does it work</h1>\n            </div>\n            <div className=\"col-6\">\n              <p className=\"devopsStyle\">\n                The DevOps life-cycle is all about agility and automation. Each phase in\n                the DevOps process flow focuses on closing the loop between development\n                and operations.\n              </p>\n            </div>\n            <div className=\"col-6\">\n              Image Section\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport getlearn from '../Image/getlearn.svg';\nimport './Header.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from '../Home/Home';\nimport Course from '../Course/Course';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <div className=\"container\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <Link className=\"navbar-brand\" to=\"/\"><img clss=\"headerLogo\" src={getlearn} alt=\"logo\" /></Link>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse topHeader\" id=\"navbarNavAltMarkup\">\n                <div className=\"navbar-nav \">\n                  <Link className=\"nav-item nav-link headerItems\" to=\"/\">Home</Link>\n                  <Link className=\"nav-item nav-link\" to=\"/course\">Course</Link>\n                </div>\n              </div>\n            </nav>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/course\" exact component={Course} />\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport getlearn from '../Image/getlearn.svg';\nimport './Home.css';\nimport Header from '../Header/Header.js'\n\nclass Home extends React.Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <div>\n          <Header/>\n        </div>\n        <header className=\"App-header\">\n          <img src={getlearn} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            What is DevOps?/Why should we used it?/How does it work?\n          </p>\n        </header>\n        <div className=\"container-fluid\">\n          <div className=\"row devops\">\n            <div className=\"col-12\">\n              <h1>What is Devops</h1>\n            </div>\n            <div className=\"col-6\">\n              <p className=\"devopsStyle\">\n                DevOps is the practice of operations and development\n                engineers participating together in the entire service\n                lifecycle, from design through the development process to production support.\n              </p>\n            </div>\n            <div className=\"col-6\">\n              Image Section\n            </div>\n          </div>\n          <div className=\"row usedDevops\">\n            <div className=\"col-12\">\n              <h1>Why should we used it</h1>\n            </div>\n            <div className=\"col-6\">\n              <p className=\"devopsStyle\">\n                Reduced Deployment Failures, Rollbacks, Time to Recover,\n                Shorter Development Cycles, Faster Innovation and build better products.\n              </p>\n            </div>\n            <div className=\"col-6\">\n              Image Section\n            </div>\n          </div>\n          <div className=\"row workDevops\">\n            <div className=\"col-12\">\n              <h1>How does it work</h1>\n            </div>\n            <div className=\"col-6\">\n              <p className=\"devopsStyle\">\n                The DevOps life-cycle is all about agility and automation. Each phase in\n                the DevOps process flow focuses on closing the loop between development\n                and operations.\n              </p>\n            </div>\n            <div className=\"col-6\">\n              Image Section\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport Home from './Components/Home/Home'\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}